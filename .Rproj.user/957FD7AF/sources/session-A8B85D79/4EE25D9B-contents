
nonpara_boot_t = function(simdata, nboot = 500, nboot_t = 200, size, true_beta, alpha = 0.05) {
  
  start_time = Sys.time()
  
  beta_boot = tstar = rep(NA, nboot)
  
  for (b in 1:nboot) {
    
    # bootstrap data
    boot_data = simdata[sample(x = seq(1, size), size = size, replace = TRUE), ]
    
    # apply method(s)
    fit_boot = fit_model(boot_data)
    
    beta_boot[b] = coef(fit_boot)["x"]
    
    boot_beta_k = rep(NA, nboot_t)
    for(k in 1:nboot_t){
      
      boot_data_k = boot_data[sample(x = seq(1, size), size = size, replace = TRUE),]
      
      # apply method(s)
      fit_boot_k = fit_model(boot_data_k)
      
      boot_beta_k[k] = coef(fit_boot_k)["x"]
    }
    
    # calculate tstar
    se_star = sd(boot_beta_k, na.rm = T)
    tstar[b] = (beta_boot[b] - estimates$beta_hat)/se_star
  }
  
  ## bootstrap t interval
  t_quants = quantile(tstar, probs = c(alpha/2, 1-(alpha/2)), na.rm = T)
  se_theta_hat = sd(beta_boot, na.rm = T)
  
  # lower CI
  low_ci = estimates$beta_hat - t_quants[2] * se_theta_hat
  # upper CI
  up_ci = estimates$beta_hat - t_quants[1] * se_theta_hat
  
  #coverage and time
  output = data.frame(coverage = ifelse(true_beta >= low_ci & true_beta <= up_ci, 1, 0),
                      time = as.numeric(difftime(Sys.time(), start_time, units = "secs")))
  
  return(output)   
}




